{"version":3,"sources":["webpack:///./src/templates/faq.tsx"],"names":["FAQTemplate","data","markdownRemark","site","frontmatter","siteMetadata","navHidden","docsPage","title","name","content","excerpt","property","subtitle","description","renderAst","htmlAst","version","siteLastUpdated","socials","query"],"mappings":"2FAAA,8LA4EeA,UAnCmC,SAAC,GAAa,IAAXC,EAAW,EAAXA,KAC3CC,EAAyBD,EAAzBC,eAAgBC,EAASF,EAATE,KAChBC,EAAgBF,EAAhBE,YACAC,EAAiBF,EAAjBE,aAER,OACE,kBAAC,IAAD,CAAaC,WAAS,GACpB,kBAAC,IAAD,CAAMC,UAAQ,GACZ,kBAAC,SAAD,KACE,+BACGL,EAAeE,YAAYI,MAD9B,MAC+CL,EAAKE,aAAaG,OAEjE,0BAAMC,KAAK,cAAcC,QAASR,EAAeS,UACjD,0BAAMC,SAAS,WAAWF,QAASR,EAAeE,YAAYI,QAC9D,0BAAMI,SAAS,iBAAiBF,QAASR,EAAeS,WAE1D,kBAAC,IAAD,KACE,kBAAC,IAAD,KACE,kBAAC,IAAD,CAAYH,MAAOJ,EAAYI,MAAOK,SAAUT,EAAYU,cAC5D,kBAAC,IAAD,KAAkBC,YAAUb,EAAec,UAC3C,kBAAC,IAAD,MACA,kBAAC,IAAD,KACE,kBAAC,IAAD,CACEC,QAASZ,EAAaY,QACtBC,gBAAiBb,EAAaa,gBAC9BC,QAASd,EAAac,gBAY/B,IAAMC,EAAQ","file":"component---src-templates-faq-tsx-9dea0e480802ece17fe8.js","sourcesContent":["import React from 'react';\r\nimport { graphql } from 'gatsby';\r\nimport { Helmet } from 'react-helmet';\r\nimport { RouteComponentProps } from '@reach/router';\r\n\r\nimport { Page } from 'components/layout/Page';\r\n\r\nimport { Container } from 'components/layout/Container';\r\nimport { DocsWrapper } from 'components/docs/DocsWrapper';\r\nimport { DocsHeader } from 'components/docs/DocsHeader';\r\nimport MarkdownContent from 'components/page/Markdown/MarkdownContent';\r\n\r\nimport { MenuNode, Edge } from 'interfaces/nodes';\r\nimport { Footer, FooterWrapper } from 'components/layout/Footer';\r\nimport IndexLayout from 'layouts';\r\nimport renderAst from 'utils/renderAst';\r\nimport { SiteMetadata } from 'interfaces/gatsby';\r\nimport { DocsContribution } from 'components/docs/DocsContribution';\r\n\r\ninterface PageTemplateProps extends RouteComponentProps {\r\n  data: {\r\n    site: {\r\n      siteMetadata: SiteMetadata;\r\n    };\r\n    sectionList: {\r\n      edges: Edge<MenuNode>[];\r\n    };\r\n    markdownRemark: {\r\n      htmlAst: any;\r\n      excerpt: string;\r\n      frontmatter: {\r\n        id: string;\r\n        title: string;\r\n        description?: string;\r\n        prev?: string;\r\n        next?: string;\r\n      };\r\n    };\r\n  };\r\n}\r\n\r\nconst FAQTemplate: React.SFC<PageTemplateProps> = ({ data }) => {\r\n  const { markdownRemark, site } = data;\r\n  const { frontmatter } = markdownRemark;\r\n  const { siteMetadata } = site;\r\n\r\n  return (\r\n    <IndexLayout navHidden>\r\n      <Page docsPage>\r\n        <Helmet>\r\n          <title>\r\n            {markdownRemark.frontmatter.title} &middot; {site.siteMetadata.title}\r\n          </title>\r\n          <meta name=\"description\" content={markdownRemark.excerpt} />\r\n          <meta property=\"og:title\" content={markdownRemark.frontmatter.title} />\r\n          <meta property=\"og:description\" content={markdownRemark.excerpt} />\r\n        </Helmet>\r\n        <DocsWrapper>\r\n          <Container>\r\n            <DocsHeader title={frontmatter.title} subtitle={frontmatter.description} />\r\n            <MarkdownContent>{renderAst(markdownRemark.htmlAst)}</MarkdownContent>\r\n            <DocsContribution />\r\n            <FooterWrapper>\r\n              <Footer\r\n                version={siteMetadata.version}\r\n                siteLastUpdated={siteMetadata.siteLastUpdated}\r\n                socials={siteMetadata.socials}\r\n              />\r\n            </FooterWrapper>\r\n          </Container>\r\n        </DocsWrapper>\r\n      </Page>\r\n    </IndexLayout>\r\n  );\r\n};\r\n\r\nexport default FAQTemplate;\r\n\r\nexport const query = graphql`\r\n  query FAQTemplateQuery($slug: String!) {\r\n    site {\r\n      siteMetadata {\r\n        title\r\n        sidebarTitle\r\n        sidebarSubtext\r\n        siteLastUpdated\r\n        description\r\n        version\r\n        siteUrl\r\n        keywords\r\n        author {\r\n          name\r\n          url\r\n          email\r\n        }\r\n        socials {\r\n          name\r\n          imgpath\r\n          url\r\n        }\r\n      }\r\n    }\r\n    markdownRemark(fields: { slug: { eq: $slug } }) {\r\n      htmlAst\r\n      excerpt\r\n      frontmatter {\r\n        id\r\n        title\r\n        description\r\n        prev\r\n        next\r\n      }\r\n    }\r\n  }\r\n`;\r\n"],"sourceRoot":""}